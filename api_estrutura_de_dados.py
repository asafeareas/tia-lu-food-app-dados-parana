# -*- coding: utf-8 -*-
"""API_ESTRUTURA_DE_DADOS.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rzjZ9vkYsUvJ8RyjOwQrmLcC5K17P64T
"""

items = []          # [codigo, nome, descricao, preco, estoque]
customers = []      # [id_cliente, nome, telefone]
orders = []         # [order_id, id_cliente, nome_cliente, lista_itens, total, desconto, status]

pending_queue = []
accepted_queue = []
ready_queue = []

next_item_code = 1
next_customer_id = 1
next_order_id = 1

print("=== Sistema de Pedidos - Restaurante (Console) ===")

while True:
    print("\nMenu Principal:")
    print("1 - Gerenciar Clientes")
    print("2 - Gerenciar Itens do Cardápio")
    print("3 - Gerenciar Pedidos")
    print("4 - Relatórios Diários")
    print("0 - Sair")
    escolha = input("Escolha uma opção: ").strip()

    if escolha == "0":
        print("Saindo... até mais!")
        break

    if escolha == "1":
        while True:
            print("\nGerenciar Clientes:")
            print("1 - Cadastrar Cliente")
            print("2 - Listar Clientes")
            print("0 - Voltar")
            opc = input("Opção: ").strip()
            if opc == "0":
                break
            if opc == "1":
                nome = input("Nome do cliente: ").strip()
                telefone = int(input("Telefone: ").strip())
                cliente_id = next_customer_id
                next_customer_id += 1
                customers.append([cliente_id, nome, telefone])
                print(f"Cliente cadastrado com ID {cliente_id}.")
            elif opc == "2":
                if not customers:
                    print("Nenhum cliente cadastrado.")
                else:
                    print("\nClientes:")
                    for c in customers:
                        print(f"ID: {c[0]} | Nome: {c[1]} | Telefone: {c[2]}")
            else:
                print("Opção inválida.")

    elif escolha == "2":
        while True:
            print("\nGerenciar Itens:")
            print("1 - Cadastrar Item")
            print("2 - Consultar Itens")
            print("3 - Atualizar Item")
            print("4 - Excluir Item")
            print("0 - Voltar")
            opc = input("Opção: ").strip()

            if opc == "0":
                break
            elif opc == "1":
                nome = input("Nome do produto: ").strip()
                descricao = input("Descrição: ").strip()
                preco_texto = input("Preço (ex: 12.50): ").strip()
                estoque_texto = input("Estoque (qtde): ").strip()
                try:
                    preco = float(preco_texto)
                    estoque = int(estoque_texto)
                except:
                    print("Preço ou estoque inválido. Tente novamente.")
                else:
                    codigo = next_item_code
                    next_item_code += 1
                    items.append([codigo, nome, descricao, preco, estoque])
                    print(f"Item cadastrado com código {codigo}.")
            elif opc == "2":
                if not items:
                    print("Nenhum item cadastrado.")
                else:
                    print("\n--- Cardápio ---")
                    for it in items:
                        print(f"Código: {it[0]} | Nome: {it[1]} | Desc: {it[2]} | Preço: R$ {it[3]:.2f} | Estoque: {it[4]}")
            elif opc == "3":
                if not items:
                    print("Nenhum item cadastrado.")
                else:
                    print("Itens disponíveis:")
                    for it in items:
                        print(f"Código: {it[0]} | Nome: {it[1]} | Preço: {it[3]} | Estoque: {it[4]}")
                    cod_texto = input("Informe o código do item a atualizar: ").strip()
                    try:
                        cod = int(cod_texto)
                    except:
                        print("Código inválido.")
                        continue
                    achou = False
                    for it in items:
                        if it[0] == cod:
                            achou = True
                            novo_nome = input(f"Novo nome (enter para manter '{it[1]}'): ").strip()
                            nova_desc = input("Nova descrição (enter para manter): ").strip()
                            novo_preco_txt = input(f"Novo preço (enter para manter {it[3]}): ").strip()
                            novo_estoque_txt = input(f"Novo estoque (enter para manter {it[4]}): ").strip()
                            if novo_nome:
                                it[1] = novo_nome
                            if nova_desc:
                                it[2] = nova_desc
                            if novo_preco_txt:
                                try:
                                    it[3] = float(novo_preco_txt)
                                except:
                                    print("Preço inválido. Mantendo antigo.")
                            if novo_estoque_txt:
                                try:
                                    it[4] = int(novo_estoque_txt)
                                except:
                                    print("Estoque inválido. Mantendo antigo.")
                            print("Item atualizado.")
                            break
                    if not achou:
                        print("Item não encontrado.")
            elif opc == "4":
                if not items:
                    print("Nenhum item cadastrado.")
                else:
                    print("Itens disponíveis:")
                    for it in items:
                        print(f"Código: {it[0]} | Nome: {it[1]} | Preço: {it[3]} | Estoque: {it[4]}")
                    cod_texto = input("Informe o código do item a excluir: ").strip()
                    try:
                        cod = int(cod_texto)
                    except:
                        print("Código inválido.")
                        continue
                    removido = False
                    for it in items:
                        if it[0] == cod:
                            items.remove(it)
                            print(f"Item {it[1]} removido com sucesso.")
                            removido = True
                            break
                    if not removido:
                        print("Item não encontrado.")
            else:
                print("Opção inválida.")

    elif escolha == "3":
        while True:
            print("\nGerenciar Pedidos:")
            print("1 - Criar Pedido")
            print("2 - Cancelar Pedido")
            print("3 - Processar Pedidos Pendentes")
            print("4 - Atualizar Status de Pedido")
            print("5 - Consultar Pedidos (todos)")
            print("6 - Filtrar por Status")
            print("0 - Voltar")
            opc = input("Opção: ").strip()

            if opc == "0":
                break

            if opc == "1":
                if not items:
                    print("Não há itens no cardápio. Cadastre itens antes de criar pedidos.")
                    continue

                print("Escolher cliente:")
                print("1 - Selecionar cliente existente")
                print("2 - Cadastrar novo cliente rápido")
                escolha_cli = input("Opção: ").strip()

                cliente_id = None
                cliente_nome = ""
                if escolha_cli == "1":
                    if not customers:
                        print("Não há clientes cadastrados. Cadastre um novo cliente.")
                        continue
                    for c in customers:
                        print(f"ID: {c[0]} | Nome: {c[1]}")
                    cid_txt = input("Informe ID do cliente: ").strip()
                    try:
                        cid = int(cid_txt)
                    except:
                        print("ID inválido.")
                        continue
                    achou = False
                    for c in customers:
                        if c[0] == cid:
                            cliente_id = c[0]
                            cliente_nome = c[1]
                            achou = True
                            break
                    if not achou:
                        print("Cliente não encontrado.")
                        continue
                else:
                    nomec = input("Nome do cliente: ").strip()
                    telc = int(input("Telefone: ").strip())
                    cliente_id = next_customer_id
                    next_customer_id += 1
                    customers.append([cliente_id, nomec, telc])
                    cliente_nome = nomec
                    print(f"Cliente cadastrado com ID {cliente_id}.")

                lista_item_pedido = []
                total = 0.0
                while True:
                    print("\nItens do cardápio:")
                    for it in items:
                        print(f"Código: {it[0]} | Nome: {it[1]} | Preço: R$ {it[3]:.2f} | Estoque: {it[4]}")
                    cod_txt = input("Informe o código do item para adicionar (ou '0' para finalizar): ").strip()
                    try:
                        cod_sel = int(cod_txt)
                    except:
                        print("Código inválido.")
                        continue
                    if cod_sel == 0:
                        break
                    encontrado = False
                    for it in items:
                        if it[0] == cod_sel:
                            encontrado = True
                            if it[4] <= 0:
                                print("Item sem estoque.")
                                break
                            qtd_txt = input("Quantidade: ").strip()
                            try:
                                qtd = int(qtd_txt)
                            except:
                                print("Quantidade inválida.")
                                break
                            if qtd <= 0:
                                print("Quantidade deve ser maior que zero.")
                                break
                            if qtd > it[4]:
                                print("Quantidade maior que estoque disponível.")
                                break
                            linha = [it[0], it[1], qtd, it[3]]
                            lista_item_pedido.append(linha)
                            total += qtd * it[3]
                            print(f"Adicionado {qtd}x {it[1]} ao pedido.")
                            break
                    if not encontrado:
                        print("Item não encontrado.")

                if not lista_item_pedido:
                    print("Pedido precisa ter ao menos um item.")
                    continue

                cupom = input("Aplicar cupom de desconto? (s/n): ").strip().lower()
                desconto = 0.0
                if cupom == "s":
                    pct_txt = input("Digite percentual de desconto (ex: 10 para 10%): ").strip()
                    try:
                        pct = float(pct_txt)
                        if pct < 0 or pct > 100:
                            print("Percentual inválido. Ignorando desconto.")
                        else:
                            desconto = (pct / 100.0) * total
                    except:
                        print("Valor inválido. Sem desconto.")

                total_com_desconto = total - desconto
                order_id = next_order_id
                next_order_id += 1
                status = "AGUARDANDO_APROVACAO"
                orders.append([order_id, cliente_id, cliente_nome, lista_item_pedido, total_com_desconto, desconto, status])
                pending_queue.append(order_id)
                print(f"Pedido criado com ID {order_id} e adicionado à fila de pendentes. Total: R$ {total_com_desconto:.2f}")

            elif opc == "2":
                if not orders:
                    print("Nenhum pedido registrado.")
                    continue
                id_txt = input("Informe o ID do pedido a cancelar: ").strip()
                try:
                    id_sel = int(id_txt)
                except:
                    print("ID inválido.")
                    continue
                pedido = None
                for p in orders:
                    if p[0] == id_sel:
                        pedido = p
                        break
                if pedido is None:
                    print("Pedido não encontrado.")
                    continue
                if pedido[6] in ["AGUARDANDO_APROVACAO", "ACEITO"]:
                    if pedido[6] == "ACEITO" or pedido[6] == "FAZENDO":
                        for linha in pedido[3]:
                            cod_item = linha[0]
                            qtd = linha[2]
                            for it in items:
                                if it[0] == cod_item:
                                    it[4] += qtd
                                    break
                    pedido[6] = "CANCELADO"
                    if pedido[0] in pending_queue:
                        try:
                            pending_queue.remove(pedido[0])
                        except:
                            pass
                    if pedido[0] in accepted_queue:
                        try:
                            accepted_queue.remove(pedido[0])
                        except:
                            pass
                    print("Pedido cancelado.")
                else:
                    print("Pedido não pode ser cancelado (já em preparo/entrega/entregue).")

            elif opc == "3":
                if not pending_queue:
                    print("Fila de pedidos pendentes vazia.")
                else:
                    current = pending_queue[0]
                    pedido = None
                    for p in orders:
                        if p[0] == current:
                            pedido = p
                            break
                    if pedido is None:
                        print("Erro: pedido não encontrado na lista.")
                        pending_queue.pop(0)
                        continue
                    print(f"Processando pedido ID {pedido[0]} | Cliente: {pedido[2]} | Total R$ {pedido[4]:.2f}")
                    print("Itens:")
                    for li in pedido[3]:
                        print(f" - {li[2]}x {li[1]} @ R$ {li[3]:.2f}")
                    resp = input("Aceitar pedido? (a = aceitar / r = rejeitar / p = pular): ").strip().lower()
                    if resp == "p":
                        print("Pulando (manter na fila).")
                    elif resp == "r":
                        pedido[6] = "REJEITADO"
                        pending_queue.pop(0)
                        print("Pedido rejeitado.")
                    elif resp == "a":
                        pode_aceitar = True
                        for linha in pedido[3]:
                            cod_item = linha[0]
                            qtd = linha[2]
                            for it in items:
                                if it[0] == cod_item:
                                    if it[4] < qtd:
                                        print(f"Estoque insuficiente para {it[1]}. Não foi possível aceitar.")
                                        pode_aceitar = False
                                    break
                        if not pode_aceitar:
                            print("Aceitação cancelada por estoque insuficiente.")
                        else:
                            for linha in pedido[3]:
                                cod_item = linha[0]
                                qtd = linha[2]
                                for it in items:
                                    if it[0] == cod_item:
                                        it[4] -= qtd
                                        break
                            pedido[6] = "ACEITO"
                            pending_queue.pop(0)
                            accepted_queue.append(pedido[0])
                            pedido[6] = "FAZENDO"
                            print("Pedido aceito e começou a ser preparado (FAZENDO).")
                    else:
                        print("Opção inválida.")

            elif opc == "4":
                if not orders:
                    print("Nenhum pedido registrado.")
                    continue
                print("Pedidos cadastrados (ID - Status):")
                for p in orders:
                    print(f"ID {p[0]} | Cliente: {p[2]} | Status: {p[6]}")
                id_txt = input("Informe o ID do pedido para atualizar status: ").strip()
                try:
                    id_sel = int(id_txt)
                except:
                    print("ID inválido.")
                    continue
                pedido = None
                for p in orders:
                    if p[0] == id_sel:
                        pedido = p
                        break
                if pedido is None:
                    print("Pedido não encontrado.")
                    continue
                print(f"Status atual: {pedido[6]}")
                print("Opções de status:")
                print("1 - Mudar para FAZENDO (preparo)")
                print("2 - Mudar para FEITO (preparo finalizado)")
                print("3 - Mudar para ESPERANDO ENTREGADOR")
                print("4 - Mudar para SAIU PARA ENTREGA")
                print("5 - Mudar para ENTREGUE")
                opc_s = input("Escolha: ").strip()
                if opc_s == "1":
                    if pedido[6] in ["ACEITO", "AGUARDANDO_APROVACAO"]:
                        pedido[6] = "FAZENDO"
                        if pedido[0] not in accepted_queue:
                            accepted_queue.append(pedido[0])
                        print("Status atualizado para FAZENDO.")
                    else:
                        print("Transição inválida.")
                elif opc_s == "2":
                    pedido[6] = "FEITO"
                    if pedido[0] in accepted_queue:
                        try:
                            accepted_queue.remove(pedido[0])
                        except:
                            pass
                    if pedido[0] not in ready_queue:
                        ready_queue.append(pedido[0])
                    pedido[6] = "ESPERANDO ENTREGADOR"
                    print("Pedido marcado como FEITO e agora ESPERANDO ENTREGADOR.")
                elif opc_s == "3":
                    pedido[6] = "ESPERANDO ENTREGADOR"
                    if pedido[0] not in ready_queue:
                        ready_queue.append(pedido[0])
                    print("Status atualizado para ESPERANDO ENTREGADOR.")
                elif opc_s == "4":
                    if pedido[0] in ready_queue:
                        try:
                            ready_queue.remove(pedido[0])
                        except:
                            pass
                    pedido[6] = "SAIU PARA ENTREGA"
                    print("Pedido saiu para entrega.")
                elif opc_s == "5":
                    pedido[6] = "ENTREGUE"
                    print("Pedido entregue.")
                else:
                    print("Opção inválida.")

            elif opc == "5":
                if not orders:
                    print("Nenhum pedido registrado.")
                else:
                    print("\n--- Todos os Pedidos ---")
                    for p in orders:
                        print(f"ID {p[0]} | Cliente: {p[2]} | Total: R$ {p[4]:.2f} | Desconto: R$ {p[5]:.2f} | Status: {p[6]}")
                        for li in p[3]:
                            print(f"    - {li[2]}x {li[1]} @ R$ {li[3]:.2f}")

            elif opc == "6":
                termo = input("Informe status para filtrar (ex: AGUARDANDO_APROVACAO, FAZENDO, ENTREGUE, REJEITADO, CANCELADO): ").strip().upper()
                achou = False
                for p in orders:
                    if p[6] == termo:
                        if not achou:
                            print(f"\nPedidos com status {termo}:")
                            achou = True
                        print(f"ID {p[0]} | Cliente: {p[2]} | Total: R$ {p[4]:.2f}")
                if not achou:
                    print("Nenhum pedido com esse status.")

            else:
                print("Opção inválida.")

    elif escolha == "4":
        total_vendido = 0.0
        qtd_por_status = []
        for p in orders:
            if p[6] == "ENTREGUE":
                total_vendido += p[4]
            status_encontrado = False
            for sc in qtd_por_status:
                if sc[0] == p[6]:
                    sc[1] += 1
                    status_encontrado = True
                    break
            if not status_encontrado:
                qtd_por_status.append([p[6], 1])

        sold_codes, sold_qtys = [], []
        for p in orders:
            if p[6] == "ENTREGUE":
                for linha in p[3]:
                    cod = linha[0]
                    nome = linha[1]
                    qtd = linha[2]
                    idx = -1
                    for i in range(len(sold_codes)):
                        if sold_codes[i][0] == cod:
                            idx = i
                            break
                    if idx == -1:
                        sold_codes.append([cod, nome])
                        sold_qtys.append(qtd)
                    else:
                        sold_qtys[idx] += qtd

        print("\n--- Relatório Diário ---")
        print(f"Total faturado (ENTREGUE): R$ {total_vendido:.2f}")
        print("Quantidade de pedidos por status:")
        for sc in qtd_por_status:
            print(f" - {sc[0]}: {sc[1]}")
        if sold_codes:
            scodes, sqtys = sold_codes[:], sold_qtys[:]
            for i in range(len(sqtys)):
                max_i = i
                for j in range(i+1, len(sqtys)):
                    if sqtys[j] > sqtys[max_i]:
                        max_i = j
                sqtys[i], sqtys[max_i] = sqtys[max_i], sqtys[i]
                scodes[i], scodes[max_i] = scodes[max_i], scodes[i]
            print("Itens mais vendidos:")
            for i in range(len(scodes)):
                print(f" - {scodes[i][1]} (Código {scodes[i][0]}): {sqtys[i]} unidades")
        else:
            print("Nenhum item vendido até agora.")

    else:
        print("Opção inválida.")